Description: Sum of positive
You get an array of numbers, return the sum of all of the positives ones.

Example [1,-4,7,12] => 1 + 7 + 12 = 20

Note: if there is nothing to sum, the sum is default to 0.

My Solution:
public class Positive{
  public static int sum(int[] arr){
  int total = 0;
  for(int i=0; i <= arr.length-1; i++){
  if(arr[i]< 0){
  total += arr[i];
  }
}
    return total;
  }
}

Best Practice:
import java.util.Arrays;
public class Positive{
    public static int sum(int[] arr){
        return Arrays.stream(arr).filter(v -> v > 0).sum();
    }
}

Notes: Use length - 1 so you do not get an out of bounds exception.
stream(arr).filter(v -> v > 0) allows you to go through each element in the array that match the predicate in .filter()
in this case, meaning each element that is greater than 0 (positive). The .sum() then is called on each element that was filtered
from the array into the stream.

-----------------------------------------